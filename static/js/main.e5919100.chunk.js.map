{"version":3,"sources":["store/usersReducer/actions.ts","store/detalUserReducer/actions.ts","components/Header/style.module.css","components/Preloader/style.module.css","components/Preloader/index.tsx","store/usersReducer/index.ts","components/Container/style.module.css","components/Container/index.tsx","routes/index.tsx","components/Header/index.tsx","App.tsx","store/detalUserReducer/index.ts","store/index.ts","index.tsx"],"names":["fetchUsers","createAsyncThunk","_","thunkAPI","a","axios","get","response","data","rejectWithValue","fetchDetalUser","login","module","exports","Preloader","className","s","wrapper","text","spinner","usersSlice","createSlice","name","initialState","users","isLoading","error","currentPage","portionUsers","totalPage","reducers","setCurrentPageNumber","state","action","payload","extraReducers","pending","type","fulfilled","rejected","actions","Container","children","container","routes","path","component","React","lazy","Header","header","map","rout","i","activeClassName","activeLink","link","exact","to","App","fallback","route","detalUserSlice","user","rootReducer","combineReducers","userReducer","detalUserReducer","store","configureStore","reducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e5919100.chunk.js","sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\nimport axios from 'axios'\nimport { IUsers } from 'models/users'\n\nexport const fetchUsers = createAsyncThunk(\n  'userSlice/fetchUsers',\n  async (_, thunkAPI) => {\n    try {\n      const response = await axios.get<IUsers[]>(\n        `https://api.github.com/users?per_page=30`\n      )\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue('Error loading users')\n    }\n  }\n)\n","import { IDetalUser } from 'models/detalUser'\nimport axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\n\nexport const fetchDetalUser = createAsyncThunk(\n  'detalUserSlice/fetchDetalUser',\n  async (login: string, thunkAPI) => {\n    try {\n      const response = await axios.get<IDetalUser>(\n        `https://api.github.com/users/${login}`\n      )\n      return response.data\n    } catch (e) {\n      return thunkAPI.rejectWithValue('Еrror loading user ')\n    }\n  }\n)\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"style_header__MlSQ_\",\"link\":\"style_link__32mRE\",\"activeLink\":\"style_activeLink__Odox6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"style_spinner__2trgV\",\"wrapper\":\"style_wrapper__Nz6Uz\",\"text\":\"style_text__20bBa\"};","import React from 'react'\nimport s from './style.module.css'\n\nconst Preloader: React.FC = () => {\n  return (\n    <div className={s.wrapper}>\n      <div className={s.text}>Loading...</div>\n      <div className={s.spinner}>\n        <div />\n      </div>\n    </div>\n  )\n}\nexport default Preloader\n","import { IUsers } from 'models/users'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchUsers } from './actions'\n\ninterface IinitialState {\n  users: IUsers[]\n  isLoading: boolean\n  error: string\n  currentPage: number\n  portionUsers: number\n  totalPage: number\n}\n\nconst initialState: IinitialState = {\n  users: [],\n  isLoading: false,\n  error: '',\n  currentPage: 1,\n  portionUsers: 8,\n  totalPage: 1,\n}\n\nconst usersSlice = createSlice({\n  name: 'userSlice',\n  initialState,\n  reducers: {\n    setCurrentPageNumber(state, action: PayloadAction<number>) {\n      state.currentPage = action.payload\n    },\n  },\n  extraReducers: {\n    [fetchUsers.pending.type]: state => {\n      state.isLoading = true\n    },\n    [fetchUsers.fulfilled.type]: (state, action: PayloadAction<IUsers[]>) => {\n      state.isLoading = false\n      state.error = ''\n      state.users = action.payload\n    },\n    [fetchUsers.rejected.type]: (state, action: PayloadAction<string>) => {\n      state.isLoading = false\n      state.error = action.payload\n    },\n  },\n})\nexport const { setCurrentPageNumber } = usersSlice.actions\n\nexport default usersSlice.reducer\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"style_container__2UoK1\"};","import React from 'react'\nimport s from './style.module.css'\n\nconst Container: React.FC = ({ children }) => {\n  return <div className={s.container}>{children}</div>\n}\n\nexport default Container\n","import React from 'react'\n\nconst HomeRoute = React.lazy(() => import('./HomeRoute'))\nconst UsersRoute = React.lazy(() => import('./UsersRoute'))\n\nexport type RoutsType = {\n  name: string\n  path: string\n  component: React.FC\n}\n\nexport const routes: RoutsType[] = [\n  { path: '/', name: 'Home', component: HomeRoute },\n  { path: '/users', name: 'Пользователи', component: UsersRoute },\n]\n","import Container from 'components/Container'\nimport React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { routes } from 'routes'\nimport s from './style.module.css'\n\nconst Header: React.FC = () => {\n  return (\n    <header className={s.header}>\n      <Container>\n        {routes.map((rout, i) => (\n          <NavLink\n            activeClassName={s.activeLink}\n            key={i}\n            className={s.link}\n            exact\n            to={rout.path}\n          >\n            {rout.name}\n          </NavLink>\n        ))}\n      </Container>\n    </header>\n  )\n}\nexport default Header\n","import Container from 'components/Container'\nimport Header from 'components/Header'\nimport Preloader from 'components/Preloader'\nimport React, { Suspense } from 'react'\nimport { Route, Switch } from 'react-router-dom'\nimport { routes } from 'routes'\nimport './App.css'\nimport 'normalize.css'\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <Header />\n      <Container>\n        <Suspense fallback={<Preloader />}>\n          <Switch>\n            {routes.map((route, i) => (\n              <Route\n                key={i}\n                exact\n                path={route.path}\n                component={route.component}\n              />\n            ))}\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  )\n}\n\nexport default App\n","import { IDetalUser } from 'models/detalUser'\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { fetchDetalUser } from './actions'\n\ninterface IinitialState {\n  isLoading: boolean\n  error: string\n  user: IDetalUser | null\n}\n\nconst initialState: IinitialState = {\n  isLoading: false,\n  error: '',\n  user: null,\n}\n\nconst detalUserSlice = createSlice({\n  name: 'detalUserSlice',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [fetchDetalUser.pending.type]: state => {\n      state.isLoading = true\n    },\n    [fetchDetalUser.fulfilled.type]: (\n      state,\n      action: PayloadAction<IDetalUser>\n    ) => {\n      state.isLoading = false\n      state.error = ''\n      state.user = action.payload\n    },\n    [fetchDetalUser.rejected.type]: (state, action: PayloadAction<string>) => {\n      state.isLoading = false\n      state.error = action.payload\n    },\n  },\n})\n\nexport default detalUserSlice.reducer\n","import { configureStore, combineReducers } from '@reduxjs/toolkit'\nimport userReducer from './usersReducer'\nimport detalUserReducer from './detalUserReducer'\n\nconst rootReducer = combineReducers({\n  userReducer,\n  detalUserReducer,\n})\n\nconst store = configureStore({\n  reducer: rootReducer,\n})\n\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nexport default store\n","import ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from 'store'\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}